package others

/*
算法：

    我们首先检车 xxx 是否为 2 的幂：x > 0 and x & (x - 1) == 0。然后可以确定 x=2ax = 2^ax=2a，若 xxx 为 4 的幂则 aaa 为偶数。
    下一步是考虑 a=2ka=2ka=2k 和 a=2k+1a=2k+1a=2k+1 两种情况，对 xxx 对 3 进行取模：

(22kmod  3)=(4kmod  3)=((3+1)kmod  3)=1(2^{2k} \mod 3) = (4^k \mod 3) = ((3 + 1)^k \mod 3) = 1(22kmod3)=(4kmod3)=((3+1)kmod3)=1

((22k+1)mod  3)=((2×4k)mod  3)=((2×(3+1)k)mod  3)=2((2^{2k + 1}) \mod 3) = ((2 \times 4^k) \mod 3) = ((2 \times(3 + 1)^k) \mod 3) = 2((22k+1)mod3)=((2×4k)mod3)=((2×(3+1)k)mod3)=2

    若 xxx 为 2 的幂且 x%3 == 1，则 xxx 为 4 的幂。

    我们通过计算 x=22kmod  3x = 2^{2k} \mod 3x=22kmod3 来理解：

    首先 22k=22k=4k2^{2k} = {2^2}^k = 4^k22k=22k=4k 且 4=3+14 = 3 + 14=3+1。
    则 xxx 可以写为 x=((3+1)kmod  3)x = ((3 + 1)^k \mod 3)x=((3+1)kmod3)。
    进行分解：(3+1)k=(3+1)×(3+1)k−1=3×(3+1)k−1+(3+1)k−1(3 + 1)^k = (3 + 1) \times (3 + 1)^{k - 1} = 3 \times (3 + 1)^{k - 1} + (3 + 1)^{k - 1}(3+1)k=(3+1)×(3+1)k−1=3×(3+1)k−1+(3+1)k−1。
    且 (3×(3+1)k−1)mod  3=0(3 \times (3 + 1)^{k - 1}) \mod 3 = 0(3×(3+1)k−1)mod3=0，则我们可以变换得 x=((3+1)k−1mod  3)x = ((3 + 1)^{k - 1} \mod 3)x=((3+1)k−1mod3)。
    我们可以继续进行以上操作 k−>k−1−>k−2−>...−>1k -> k - 1 -> k - 2 -> ... -> 1k−>k−1−>k−2−>...−>1 最后得到 x=((3+1)1mod  3)=1x = ((3 + 1)^1 \mod 3) = 1x=((3+1)1mod3)=1.
*/

func isPowerOfFour(num int) bool {
	return num > 0 &&
		num&(num-1) == 0 && //是2的幂
		num%3 == 1
}
